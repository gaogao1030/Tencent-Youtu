exit
ap JSON.parse(response.body)
JSON.parse(response.body)["gender"]
JSON.parse(response.body)
response.body
response.methods
response
result
continue
result
request
exit
response
continue
_original
exit
_original
_time_stamp
_r
_time_stamp
_r
exit
response
exit
request.args
request
result
request.read
request
exit
request.payload.read
request.payload
exit
request.payload.read
request.payload
request
exit
request.args
request
config
exit
request.payload.length
request.payload.read
request.payload
request
continue
reqeust
request
reqeust
pay
continue
request.payload.length
request.payload
request.payload.read
request.payload
request.headers
request
continue
config
exit
request.payload
request
reuqest
continue
config[:payload]
config
exit
request.payload.read
request.payload.stub
request.payload.inspect
request.payload.methods
request.payload.stream
request.payload.read
request.payload
request
continue
config[:payload].read
config[:payload]
config
payload
exit
payload.class
payload
config[:payload]
config
exit
request.payload.read
request.payload
request
continue
next
payload.headers
payload
payload.read
exit
request.payload.read
request.payload.stream
request.payload.stram
request.payload.methods
request.payload
request.methods
request
request.payload.headers
request.payload
exit
request.payload.read
request.payload.methods
request.payload.headers
request.payload.headers={"d":"dd"}
request.payload.headers
request.payload
request.headers
request.payload.headers
request.payload.size
request.payload.length
request.payload.methods
request.payload.read
request.payload
response
request.body
request.log_request
request.headers
request.header
request
exit
request.payload
request
request.payload
request.payload.read
request.payload
request
reuqest
result
request.headers[:Authorization]
request.headers
request
exit
response
exit
request.args
response
exit
request.args
request~args
request
exit
response
continue
request.args
request.methods
request
continue
_r.length
_r
_time_stamp
_timt_stamp
_expired
_secret_id
_app_id
_user_id
exit
_signature ==  "V1fNuvOMjHkX1Q4IudaPsd7Ks691PTEwMDAwJmE9MjAxMTU0MTIyNCZrPUFLSUQyWmtPWEZ5RFJIWlJsYlBvOTNTTXR6Vlk3OWtwQWRHUCZlPTE0MzI5NzAwNjUmdD0xNDI3Nzg2MDY1JnI9MjcwNDk0NjQ3JmY9"
"V1fNuvOMjHkX1Q4IudaPsd7Ks691PTEwMDAwJmE9MjAxMTU0MTIyNCZrPUFLSUQyWmtPWEZ5RFJIWlJsYlBvOTNTTXR6Vlk3OWtwQWRHUCZlPTE0MzI5NzAwNjUmdD0xNDI3Nzg2MDY1JnI9MjcwNDk0NjQ3JmY9"
V1fNuvOMjHkX1Q4IudaPsd7Ks691PTEwMDAwJmE9MjAxMTU0MTIyNCZrPUFLSUQyWmtPWEZ5RFJIWlJsYlBvOTNTTXR6Vlk3OWtwQWRHUCZlPTE0MzI5NzAwNjUmdD0xNDI3Nzg2MDY1JnI9MjcwNDk0NjQ3JmY9
_signature==V1fNuvOMjHkX1Q4IudaPsd7Ks691PTEwMDAwJmE9MjAxMTU0MTIyNCZrPUFLSUQyWmtPWEZ5RFJIWlJsYlBvOTNTTXR6Vlk3OWtwQWRHUCZlPTE0MzI5NzAwNjUmdD0xNDI3Nzg2MDY1JnI9MjcwNDk0NjQ3JmY9"
_signature
exit
_signature
continue
_signature
continue
exit
_signature
exit
_signature
exit
_secret_key
_signature
exit
_original.encoding
_original
Math.pow(2,32)
Math
Random
Math::Random
Math.methods
Math
Math.random
_secret_key
_secret_id
_secret
_original
continue
_hmac
_signature
Base64.encode64(_original)
Base64.encode64("_orii")
Base64.encode64("gggg")
Base64.encode64("d")
Base64.encode64("#{_hmac}+#{_original}")
next
_hmac
hmac
exit
String.concat ["dd","s"]
String
[Buffer"dd","ss"]
["dd","ss"].concat
s.update "a"
digest
s.update "a"
s=Digest::SHA1.new  
Digest::SHA1.new  
_sha1.update(_original).deDigest::SHA1.new  
_sha1.update(_original)
_sha1
_sha1.update(_original)
_sha1.update(_original).digest
_sha1.update(_original)
_sha1
 _sha1 = OpenSSL::HMAC.new(_secret_key,OpenSSL::Digest.new('sha1'))
_original
continue
exit
_res
_res.class
_res.to_s
_res
res+_original
_original
_res
continue
_signature
next
_original
_hmac
next
_original
exit
result
exit
result
exit
response
request
exit
Youtu.config.host.match(/^(?:([A-Za-z]+):)?(\/{0,3})([0-9.\-A-Za-z]+)(?::(\d+))?(?:\/([^?#]*))?(?:\?([^#]*))?(?:#(.*))?$/)[3]
Youtu.config.host.match(/^(?:([A-Za-z]+):)?(\/{0,3})([0-9.\-A-Za-z]+)(?::(\d+))?(?:\/([^?#]*))?(?:\?([^#]*))?(?:#(.*))?$/)
Youtu.config.host.match("/^(?:([A-Za-z]+):)?(\/{0,3})([0-9.\-A-Za-z]+)(?::(\d+))?(?:\/([^?#]*))?(?:\?([^#]*))?(?:#(.*))?$/")
Youtu.config.host.match("/^(?:([A-Za-z]+):)?(\/{0,3})([0-9.\-A-Za-z]+)(?::(\d+))?(?:\/([^?#]*))?(?:\?([^#]*))?(?:#(.*))?$/;")
Youtu.config.host.match("([0-9.\-A-Za-z]+)")
Youtu.config.host.match(/([0-9.\-A-Za-z]+)/)
Youtu.config.host.match("http://|https//(.*)")
Youtu.config.host.match("http://|https//(.)")
Youtu.config.host.match("http://|https")
Youtu.config.host
